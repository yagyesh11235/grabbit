ext.spring_version = "3.2.9.RELEASE_1"

//noinspection GroovyAssignabilityCheck
dependencies {
    // Library for Groovy
    compile "org.codehaus.groovy:groovy-all:${groovy_version}"

    // Used as part of the build to create the OSGI-INF/serviceComponents.xml file
    compile "org.apache.felix:org.apache.felix.scr.annotations:${scr_annotations_version}"

    //Google libraries
    compile "com.google.guava:guava:${guava_version}"

    //For annotations like @Nonnull, etc.
    compile "com.google.code.findbugs:jsr305:${jsr305_version}"

    // Adobe AEM Libraries
    compile "com.day.cq.workflow:cq-workflow-console:${cq_workflow_console_version}" 

    // Apache Sling libraries
    compile "org.apache.sling:org.apache.sling.api:${sling_api_version}"
    compile "org.apache.sling:org.apache.sling.jcr.resource:${sling_jcr_resource_version}"

    // Apache Felix libraries
    compile "org.apache.felix:org.osgi.core:${felix_osgi_version}"
    compile "org.apache.felix:org.osgi.compendium:${felix_osgi_version}"

    compile "joda-time:joda-time:1.6.2"

    // Need the "javax.jms" library for Spring JMS
    compile "org.glassfish:javax.jms:${jms_version}"

    // Working with the JCR
    compile "javax.jcr:jcr:${jcr_version}"
    compile "org.apache.jackrabbit:jackrabbit-jcr-commons:${jackrabbit_version}"
    compile "org.apache.sling:org.apache.sling.jcr.api:${sling_commons_version}"

    // Logging
    compile "org.slf4j:slf4j-api:${slf4j_version}"
    compile "org.slf4j:jcl-over-slf4j:${slf4j_version}"

    // Servlet/JSP libraries
    compile "javax.servlet:servlet-api:${servlet_api_version}"

    // This version of Spring Batch brings in non-OSGi transitive dependencies, so they need to be overrriden
    compile "org.springframework.batch:spring-batch-core:${spring_batch_version}", {
        exclude group: "org.springframework", module: "spring-core"
        exclude group: "org.springframework", module: "spring-beans"
        exclude group: "org.springframework", module: "spring-aop"
        exclude group: "org.springframework", module: "spring-expression"
        exclude group: "org.springframework", module: "spring-context"
        exclude group: "org.springframework", module: "spring-tx"
        exclude group: "com.thoughtworks.xstream", module: "xstream"
    }

    // Spring libraries
    compile "org.apache.servicemix.bundles:org.apache.servicemix.bundles.spring-aop:${spring_version}"
    compile "org.apache.servicemix.bundles:org.apache.servicemix.bundles.spring-beans:${spring_version}"
    compile "org.apache.servicemix.bundles:org.apache.servicemix.bundles.spring-core:${spring_version}"
    compile "org.apache.servicemix.bundles:org.apache.servicemix.bundles.spring-context:${spring_version}"
    compile "org.apache.servicemix.bundles:org.apache.servicemix.bundles.spring-tx:${spring_version}"
    compile "org.apache.servicemix.bundles:org.apache.servicemix.bundles.spring-expression:${spring_version}"
    compile "org.aopalliance:com.springsource.org.aopalliance:1.0.0"
    compile "org.springframework.osgi:spring-osgi-extender:${spring_osgi_version}", {
        exclude group: "org.springframework", module: "org.springframework.core"
        exclude group: "org.springframework", module: "org.springframework.context"
        exclude group: "org.springframework", module: "org.springframework.beans"
        exclude group: "org.springframework", module: "org.springframework.asm"
        exclude group: "org.springframework", module: "org.springframework.expression"
        exclude group: "org.springframework", module: "org.springframework.aop"
    }

    compile "org.apache.commons:commons-lang3:${commons_lang_version}"
    compile "commons-io:commons-io:${commons_io_version}"

    // HTTP components libraries
    compile "org.apache.httpcomponents:httpclient-osgi:${httpcomponents_client_version}", {
        exclude module: "httpclient"
        exclude module: "httpcore"
        exclude module: "httpclient-cache"
        exclude module: "httpmime"
        exclude module: "fluent-hc"
    }
    compile "org.apache.httpcomponents:httpcore-osgi:${httpcomponents_core_version}", {
        exclude module: "httpclient-cache"
        exclude module: "httpcore"
        exclude module: "httpcore-nio"
        exclude module: "httpmime"
        exclude module: "fluent-hc"
    }

    compile "org.yaml:snakeyaml:${snakeyaml_version}"

    compile "com.twc.osgi:protobuf-java:${protobuf_version}"
    //For cleaner mocking
    testCompile "org.objenesis:objenesis:${objenesis_version}"

}

configurations.compile {
    exclude group: 'commons-logging', module: 'commons-logging'
}
